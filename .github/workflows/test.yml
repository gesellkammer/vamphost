name: test

on: [push, pull_request]

jobs:
  test:
    name: test on ${{ matrix.os }}, python ${{ matrix.python-version }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [macOS-latest, windows-latest, ubuntu-latest]
        python-version: [ "3.9", "3.10" ]
    steps:
      - uses: actions/checkout@v3

      # Used to host cibuildwheel
      - uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: prepare tests in linux
        if: runner.os == 'linux'
        run: |
          mkdir -p ~/vamp
          cd ci
          cp pyin.so pyin.n3 pyin.cat ~/vamp
          cd ..

      - name: prepare tests in mac
        if: runner.os == 'macos'
        run: |
          mkdir -p ~/Library/Audio/Plug-Ins/Vamp
          cd ci
          cp pyin.dylib pyin.n3 pyin.cat ~/Library/Audio/Plug-Ins/Vamp
          cd ..

      - name: prepare tests win
        if: runner.os == 'windows'
        run: |
          mkdir "C:/Program Files/Vamp Plugins" -ea 0
          cd ci
          Copy-Item pyin.dll -Destination "C:\Program Files\Vamp Plugins"
          Copy-Item pyin.n3  -Destination "C:\Program Files\Vamp Plugins"
          Copy-Item pyin.cat -Destination "C:\Program Files\Vamp Plugins"
          cd ..

      - name: run tests
        run: |
          pip install -U vamphost
          cd ci
          python test1.py
          cd ..
